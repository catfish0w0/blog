# you can move this content to front matter of [language]/tabs/projects.md
###########################################################
#                Projects Page Data
###########################################################
page_data:
  main:
    header: "Projects"
    info: "Rome was not built in one day."
    text_color: "white"
    # if you don't want to use background image, comment it. back_color will be activated.
    img: ":Rome2.jpg"
    back_color: "lightblue"

  category:
    - title: "React"
      type: id_react
      color: "#61DBFB"
    - title: "Full Stack"
      type: id_full_stack
      color: "gray"
    - title: "Projects for Fun"
      type: id_fun_project
      color: "#c8ff93"

  list:
    # React
    - type: id_react
      project_name: "Tenzi Game"
      project_excerpt: "a fully functional web-based tenzie game to test your luck index."
      img: ":react-projects/tenzi-react.png"
      img_title: "tenzi"
      date: "2022-08-14"
      post: |
        # Examples

        This is an example page to display markdown related styles for Mr. Green Jekyll Theme.

        ### Headings (centered)
        {:data-align="center"}

        # Heading 1

        ## Heading 2

        ### Heading 3

        #### Heading 4

        ##### Heading 5

        ###### Heading 6

        ***

        ### Paragraphs

        #### Paragraph

        **William Shakespeare**, Let me not to the marriage of true minds
        Admit impediments. Love is not love
        Which alters when it alteration finds,
        Or bends with the remover to remove.
        O no, it is an ever-fixed mark
        That looks on tempests and is never shaken;
        It is the star to every wand'ring barque,
        Whose worth's unknown, although his height be taken.
        Love's not Time's fool, though rosy lips and cheeks
        Within his bending sickle's compass come;
        Love alters not with his brief hours and weeks,
        But bears it out even to the edge of doom.
        If this be error and upon me proved,
        I never writ, nor no man ever loved.

        #### Texts

        Quoted text `Hello world`

        Bold text **Hello world**

        Italic text _Hello world_

        kbd text <kbd>Hello world</kbd>

        #### Blockquote

        > **William Shakespeare**, Let me not to the marriage of true minds
        Admit impediments. Love is not love
        Which alters when it alteration finds,
        Or bends with the remover to remove.
        O no, it is an ever-fixed mark
        That looks on tempests and is never shaken;
        It is the star to every wand'ring barque,
        Whose worth's unknown, although his height be taken.
        Love's not Time's fool, though rosy lips and cheeks
        Within his bending sickle's compass come;
        Love alters not with his brief hours and weeks,
        But bears it out even to the edge of doom.
        If this be error and upon me proved,
        I never writ, nor no man ever loved.

        ### Link

        This is [Mr. Green Jekyll Theme](https://github.com/MrGreensWorkshop/MrGreen-JekyllTheme), a simple theme built for [Jekyll](https://jekyllrb.com/).

        ### Picture

        ![such a lovely place](:projects-heading.jpg)

        ### Picture (centered)

        ![such a lovely place](:project1_thumb.jpg){:data-align="center"}

        ### Lists

        - Apple
        - Banana
        - Orange

        1. Fruits
            1. Apples
                - Granny Smith
                - Mutsu
            1. Bananas
                - Cavendish
                - Red
        1. Vegetables

        ***

        ### Tables

        #### Small Table (centered)

        | Fruits(not aligned) | Alignment (centered) | num (right align) |
        | ------------------- | :------------------: | ----------------: |
        | Apple               |       centered       |              9999 |
        | Banana              |  centered long text  |               999 |
        | Orange              |       centered       |                99 |
        | Lemon               |       centered       |                 9 |
        {:data-align="center"}

        #### Wide Table (centered)

        scroll enabled when page is narrow

        | Fruits | num (left align) | num (right align) | num  | num  | num  |
        | ------ | :--------------- | ----------------: | ---- | ---- | ---- |
        | Apple  | 1111             |              1111 | 2222 | 3333 | 4444 |
        | Banana | 111              |               111 | 222  | 333  | 444  |
        | Orange | 11               |                11 | 22   | 33   | 44   |
        | Lemon  | 1                |                 1 | 2    | 3    | 4    |
        {:data-align="center"}

        #### Wider Table

        scroll enabled when page is narrow

        | Fruits | num (left align) | num (right align) | num  | num  | num  | num  | num  | num  |
        | ------ | :--------------- | ----------------: | ---- | ---- | ---- | ---- | ---- | ---- |
        | Apple  | 1111             |              1111 | 2222 | 3333 | 4444 | 5555 | 6666 | 7777 |
        | Banana | 111              |               111 | 222  | 333  | 444  | 555  | 666  | 777  |
        | Orange | 11               |                11 | 22   | 33   | 44   | 55   | 66   | 77   |
        | Lemon  | 1                |                 1 | 2    | 3    | 4    | 5    | 6    | 7    |

        ### Code

        #### Quote

        ```python
        for i in range(5, 10):
          print(i)
        ```
    - type: id_react
      project_name: "Quiz Game"
      project_excerpt: "a fully functional web-based tenzie game to test your luck index."
      img: ":react-projects/quizCal/quizCalFilled.png"
      img_title: "quizCal"
      date: "2022-09-01"
      post: |
        #### What is this project about?

        App: [Link](https://prod.d2fimk63dmdzuc.amplifyapp.com)\
        Github: [Link](https://github.com/catfish0w0/quizCal)

        #### Reason of doing this App

        #### App Features

        #### Design Process && Thought Process 

        #### User Journey

        #### Features to improve in the future.

    - type: id_react
      project_name: "Tenzi Game"
      project_excerpt: "a fully functional web-based tenzie game to test your luck index."
      img: ":react-projects/tenzi/tenzi-react.png"
      img_title: "tenzi"
      date: "2022-08-14"
      post: |
        #### What is this project about?
        This project is the online web-based version of the dice rolling game, tenzi. User get ten dices to roll. Each time it rolls,
        user dicided which number to hold and go for. Then, user re-roll other dices until all ten of the dices are the same numbers.
        Deep down, it is a luck testing game!!

        App: [Link](https://prod.d3422cj9r5dusu.amplifyapp.com)\
        Github: [Link](https://github.com/catfish0w0/tenzieGame)

        #### Reason of doing this App
        1. this is a good practice project I built while I am still learning about React. It involves state management and effect 
        management throughout the app.
        2. tenzi is fun, I like playing tenzi with my friends in real life. :)
        3. tenzi is a fair way to determine how lucky you are today. :)

        #### App Features
        1. generate 10 dices, and be able to click on them.
        2. be able to hold some dices, and re-roll unhold dices.
        3. can end the game, and play again.

        #### Design Process && Thought Process
        In designing my web-based online version of the Tenzi game using React, 
        I focused on creating an intuitive and streamlined experience. 
        The main component of the page is the game itself, which requires rendering ten dice on a single page.
         To achieve this, I utilized an array of length 10 to store the dice values, allowing for dynamic rendering of the dice. 
         Additionally, when re-rolling the dice, it was important to only re-roll the dice that were not being held. 
         To facilitate this, Each dice object has a variable stating if the current dice is held or not, so we can 
         distinguish and dynamically change the dice color while re-rendering the page. 
         Once ten dice with the same number are held, the game checks for the win condition. 
         The win condition requires two criteria: all ten dice must be held, and they must all show the same number. 
         To determine if these criteria are met, I implemented a simple array traversal.
        To distinguish between the effects of winning and actively playing the game, 
        I also incorporated a state variable to track the game's completion status, ensuring a clear separation. 

        #### User Journey
        When user first enter the page withough clicking any dice.
        ![](:react-projects/tenzi/tenzieStart.png){:data-align="center"}

        When user hold some dices.
        ![](:react-projects/tenzi/tenzieClicks.png){:data-align="center"}

        When user finish the game.
        ![](:react-projects/tenzi/tenzieWin.png){:data-align="center"}

        #### Features to improve in the future.
        1. implement restart game button while still playing the current game
        2. check for how many counts needed for the game to win and display it once the user win the game.

    - type: id_react
      project_name: "Note App"
      project_excerpt: "web-based notes taking app using local storage."
      img: ":react-projects/notes/notes-app-has-note.png"
      img_title: "note-taking"
      date: "2022-08-10"
      post: |
        #### What is this project about?
        This project is a web-app that allows for notes taking. The idea behind is to allow 
        the user utilize their local storage resources for note taking.

        App: [Link](https://prod.d2j11v9quij54i.amplifyapp.com)\
        Github: [Link](https://github.com/catfish0w0/window-note-app)

        #### Reasons for creating this app
        I built this app while I was studying React for the first time. I followed a course on Scrimba 
        so that I can start building small fun frontend React App. In addition, I learnt about how 
        to use library resources to build up this App.

        #### App features
        1. Able to create a new Note App
        2. can create, delete and change Heading of the sub-notes.
        3. Utilizes localStorage of the browser, such that it reload the notes you put in before.

        #### Design Process && Thought Process
        The Page will split into two sections, the left side would be the interactive side bar nav, and the right side
        would be the text editor for the notes. There are numerous way to achieve the same result. For example, 
        I can build a single page React component by only using React and pure CSS. But I did some research and 
        followed the course, and it is best to use some built in component from npm library, so that we do not need to
        use too much time building every functionality of the text editor from scratch.

        To achieve rendering all the notes dynamically, we need a data structure to store all the notes data we have.
        And we want it to re-render whenever we change the note taking, so the most trivial solution here
        would be using a state, and the state would hold an array of object that has the time info and notes info. 
        and since we are using react-mde package, we just need to pass in the update note function and current note tab id to it.

        To achieve staying at a specific note, we need to identify which note tab we are holding currently. One way to achieve
        this feature is to manage a state variable that keep track of which note id we are currently in. 
        Since we are mapping every note out in the sidebar nav, we can simply generate id while we create new notes.

        All other functionalities are built uponed these concepts and state management.

        #### User Journey
        Since the user has not created any notes in local storage, 
        the following screen will show up when the user first enter the URL.

        ![](:react-projects/notes/note-app-no-notes.png){:data-align="center"}

        Later the user hit the create notes button, it will show up the side nav bar and the text editor on the screen.

        ![](:react-projects/notes/notes-app-has-note.png){:data-align="center"}

        #### Features to improve in the future.
        1. Add a database, so that it becomes real App with backend and database.
        2. Modify the UI
        3. Add Account Management Features.
